/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajpca10.UserInter;

import Serialize.AutoSuggestor;
import Serialize.PreviousSearch;
import ajpca10.AddedResults;
import ajpca10.Downloader;
import ajpca10.Searcher;
import ajpca10.getHTMLText;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.Font;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Darren
 */
public class SearchForm extends javax.swing.JFrame {

    private int NumberOfTries = 0;
    private Set<String> Searches = new TreeSet<String>();
    private String SearchText = "";
    /**
     * Creates new form SearchForm
     */
    public SearchForm() {
        initComponents();
        
        
        LblThreads.setText("" + SldThread.getValue());
        FileInputStream fis = null;
        ObjectInputStream ois = null;
        try {
            fis = new FileInputStream("Searches.pastStuff");
            ois = new ObjectInputStream(fis);
            PreviousSearch PstSearch = (PreviousSearch) ois.readObject();

            Searches.addAll(PstSearch.getPastSearches());

        } catch (ClassNotFoundException e) {
            System.out.println("Unable to find the class");
        } catch (IOException e) {

        } finally {
            try {
                ois.close();
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("unable to close input stream");
            }
        }

        AutoSuggestor autoSuggestor = new AutoSuggestor(SearchTxt, this, null, Color.WHITE.brighter(), Color.RED.darker(), Color.RED.brighter(), 0.75f) {
            @Override
            public boolean wordTyped(String typedWord) {

                setDictionary(Searches);
                //addToDictionary("bye");//adds a single word

                return super.wordTyped(typedWord);//now call super to check for any matches against newest dictionary
            }
        };

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        SearchTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SldThread = new javax.swing.JSlider();
        LblThreads = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LstURL = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        JEpaneHTML = new javax.swing.JEditorPane();
        jLabel5 = new javax.swing.JLabel();
        BtnShowBrowser = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JEDescription = new javax.swing.JEditorPane();
        LblLol = new javax.swing.JLabel();
        LblOcc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter your search below :");

        SearchBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        SearchTxt.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Gingle Web Crawler");

        SldThread.setMajorTickSpacing(1);
        SldThread.setMaximum(12);
        SldThread.setMinimum(1);
        SldThread.setPaintTicks(true);
        SldThread.setSnapToTicks(true);
        SldThread.setToolTipText("");
        SldThread.setValue(2);
        SldThread.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SldThreadStateChanged(evt);
            }
        });

        LblThreads.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblThreads.setText("1");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Number of threads");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Description : ");

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        LstURL.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                LstURLValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(LstURL);

        JEpaneHTML.setEditable(false);
        jScrollPane3.setViewportView(JEpaneHTML);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("HTML Element :");

        BtnShowBrowser.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        BtnShowBrowser.setText("Show In Default Browser");
        BtnShowBrowser.setEnabled(false);
        BtnShowBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnShowBrowserActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Collected Url :");

        JEDescription.setEditable(false);
        jScrollPane4.setViewportView(JEDescription);

        LblOcc.setText("Number of Occurance of search query :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SldThread, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblThreads, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LblLol)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BtnShowBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LblOcc)
                .addGap(293, 293, 293))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(LblLol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SldThread, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LblThreads, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnShowBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(LblOcc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SearchTxt.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        SearchText = SearchTxt.getText();
        
        if (SearchTxt.getText().isEmpty()) {
            switch (NumberOfTries) {
                case (0):
                    LblLol.setText("Please fill in the searh box");
                    NumberOfTries++;
                    break;
                case (1):
                    LblLol.setFont(new Font("Tomaha", Font.BOLD, 20));
                    LblLol.setText("Please FILL in the search box");
                    LblLol.setForeground(Color.RED);
                    NumberOfTries++;
                    break;
                case (2):
                    LblLol.setText("DUDE FILL IN THE SEARCH TEXT");
                    LblLol.setFont(new Font("Tomaha", Font.BOLD, 25));
                    NumberOfTries++;
                    break;
                case (3):
                    try {
                        Desktop.getDesktop().open(new File("RickRoll.mp4"));
                        NumberOfTries++;
                    } catch (IOException ex) {
                        Logger.getLogger(SearchForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;

                //modify the code or view the link if you dare
                case (50):
                    try {
                        Desktop.getDesktop().browse(new URI("www.findminecraft.com"));
                    } catch (IOException e) {

                    } catch (URISyntaxException e) {

                    }
                    break;

                default:
                    LblLol.setText("i have nothing to say");
                    LblLol.setFont(new Font("Tomaha", Font.PLAIN, 16));
                    break;

            }
        } else {
            FileOutputStream fos = null;
            ObjectOutputStream os = null;
            PreviousSearch ps = new PreviousSearch();
            Searches.add(SearchTxt.getText());
            try {
                ps.setPastSearches(Searches);
                fos = new FileOutputStream("Searches.pastStuff");
                os = new ObjectOutputStream(fos);
                os.writeObject(ps);
                os.close();

            } catch (IOException e) {
                e.printStackTrace();
                System.out.println("Unable to serialize object");
            } finally {
                try {
                    fos.close();
                    os.close();
                } catch (IOException e) {
                    e.printStackTrace();
                    System.out.println("Unable to close streams");
                }
            }
            /**
             * this UI has me hitting a lot of wall but my friend told me that 
             * UI must always run on the main thread so i did it and it work
             * but i couldn't get through the hurdle of adding a progress bar under this as i don't 
             * have enough time due to many other assignments to finish but i hope is able to pass as 
             * a loading screen
             */
            final JFrame f = new JFrame("loading");
            final Icon icon = new ImageIcon("src\\LoadingScreen\\loading.gif");
            final JLabel label = new JLabel(icon);
            BtnShowBrowser.setEnabled(false);
            
            
            f.setUndecorated(true);
            f.add(label);
            f.pack();
            f.setLocationRelativeTo(null);
            f.setVisible(true);
            f.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            
            /**
             * making this final so that the thread below that is gonna access this
             * cannot change this 
             */
            final String search = SearchTxt.getText().trim().replace(' ', '+');
            final int ThreadNum = SldThread.getValue();
            
            /**
             * this is to run the search and download code on another thread
             */
            Runnable r = new Runnable() {
                @Override
                public void run() {
                    
                    long start = System.currentTimeMillis();//this is to count the time the whole thread need to run
                    
                    final Searcher s = new Searcher();//this is made final to ake so no changes can be made to it 

                    try {
                        
                        s.StartSearch(search, ThreadNum);//this is to start the thread
                        
                        /**
                         * this code is to stop the current thread as the download threads 
                         * inside of this current thread is running and not 
                         * sleeping this thread is a bad thing as it will not properly load all the 
                         * downloaded links
                         */
                        while (true) {
                            if (s.GetIsFinish() == true) {
                                break;
                            }
                            Thread.sleep(1);
                        }
                        System.out.println("<--------------Download Finish------------------>");
                        
                        //this is to set the location of the label
                        int i = 0;

                        //this stores all the url and its respective name
                        HashMap<Integer, AddedResults> ClltURLPath = new HashMap<Integer, AddedResults>();
                        ClltURLPath.putAll(Downloader.Urls);

                        ArrayList<AddedResults> URLAndDescription = new ArrayList<AddedResults>();

                        URLAndDescription.addAll(ClltURLPath.values());

                        String[] URLList = new String[URLAndDescription.size()];

                        for (int j = 0; j < URLAndDescription.size(); j++) {
                            URLList[j] = URLAndDescription.get(j).getURLS();
                        }
                        EventQueue.invokeLater(() -> {
                            LstURL.setListData(URLList);
                            f.dispose();
                            long time = System.currentTimeMillis() - start;
                            System.out.println("Total amount of time to run all threads is : " + (time / 1000) + " seconds");
                        });
                    } catch (InterruptedException IE) {
                        IE.printStackTrace();// :(
                    }
                }

            };
            Thread t = new Thread(r);
            t.start();
            //this.dispose();
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void LstURLValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_LstURLValueChanged
        if (!evt.getValueIsAdjusting()) {//This line prevents double events

            BtnShowBrowser.setEnabled(true);

            int FileName = getKeyByValue(Downloader.Urls, LstURL.getSelectedValue());
            
            Thread HTMLText;

            getHTMLText GetHTMLText = new getHTMLText(FileName + "", JEpaneHTML ,LblOcc , SearchText);
            
            /**
             * i am running another thread to load this function as this process sometimes takes too long
             * this thread will load the HTML data I have downloaded in a text form and load it in the 
             * JEditorPane
             */
            HTMLText = new Thread(GetHTMLText);
            synchronized (GetHTMLText) {
                HTMLText.start();
                String Description = (Downloader.Urls.get(FileName).getDescription());
                JEDescription.setContentType("text/html");
                JEDescription.setText("<html><title></title><body>" + Description + "</body></html>");
            }

        }
    }//GEN-LAST:event_LstURLValueChanged

    private void BtnShowBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnShowBrowserActionPerformed
        try {
            String FileName = getKeyByValue(Downloader.Urls, LstURL.getSelectedValue()).toString();

            Desktop.getDesktop().browse(new URI(FileName + ".html"));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Unbale to read HTML file", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(null, "URL syntax problem\ncouldn't get the correct HTML file", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_BtnShowBrowserActionPerformed

    private void SldThreadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SldThreadStateChanged
        int value = SldThread.getValue();
        LblThreads.setText("" + value);
    }//GEN-LAST:event_SldThreadStateChanged

    private void formAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorMoved
        
    }//GEN-LAST:event_formAncestorMoved

    /**
     * this is to get the data from the hashmap storing a filename which is an Integer (I know so not creativity)
     * and class that stores the URL and the description
     * @param <T>
     * @param <E>
     * @param map
     * @param value
     * @return 
     */
    public static <T, E> T getKeyByValue(Map<T, AddedResults> map, String value) {
        for (Map.Entry<T, AddedResults> entry : map.entrySet()) {
            if (Objects.equals(value, entry.getValue().getURLS())) {
                return entry.getKey();
            }
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnShowBrowser;
    private javax.swing.JEditorPane JEDescription;
    private javax.swing.JEditorPane JEpaneHTML;
    private javax.swing.JLabel LblLol;
    private javax.swing.JLabel LblOcc;
    private javax.swing.JLabel LblThreads;
    private javax.swing.JList<String> LstURL;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JSlider SldThread;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
